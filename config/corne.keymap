#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&led_strip {
    chain-length = <0>;

    // chain-length = <27>;
    // 21 backlight + 6 glowlight
};

#define TAPPING_TERM 200

/ {
    behaviors {
        /*
    * td_lock groups locking functions into one key:
    *  - tap once to lock the host
    *  - tap twice to put the host to sleep
    */

        tabESC: tabESC {
            compatible = "zmk,behavior-tap-dance";
            label = "TABESC";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp TAB>, <&kp ESC>;
        };

        L_Bracket: L_Bracket {
            compatible = "zmk,behavior-tap-dance";
            label = "L_BRACKET";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_PARENTHESIS>,
                <&kp LEFT_BRACE>,
                <&kp LEFT_BRACKET>;

            tapping-term-ms = <180>;
        };

        R_Bracket: R_Bracket {
            compatible = "zmk,behavior-tap-dance";
            label = "R_BRACKET";
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_PARENTHESIS>,
                <&kp RIGHT_BRACE>,
                <&kp RIGHT_BRACKET>;

            tapping-term-ms = <180>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Clear_BLE_Profile {
            bindings = <&bt BT_CLR>;
            key-positions = <0 38 5>;
        };

        Space {
            bindings = <&kp SPACE>;
            key-positions = <29 28>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <17 16>;
        };

        Capslock {
            bindings = <&kp CLCK>;
            key-positions = <5 6>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
&tabESC           &kp Q  &kp W  &kp E      &kp R                   &kp T           &kp Y      &kp U      &kp I         &kp O    &kp P      &kp MINUS
&kp LANG_HANGEUL  &kp A  &kp S  &kp D      &kp F                   &kp G           &kp H      &kp J      &kp K         &kp L    &kp SEMI   &kp SINGLE_QUOTE
&kp LEFT_SHIFT    &kp Z  &kp X  &kp C      &kp V                   &kp B           &kp N      &kp M      &kp COMMA     &kp DOT  &kp SLASH  &kp RIGHT_SHIFT
                                &kp LCTRL  &mt LEFT_ALT BACKSPACE  &lt 2 DELETE    &lt 1 RET  &kp SPACE  &kp LEFT_GUI
            >;
        };

        symbols_layer {
            label = "SYMBOLS";
            bindings = <
&kp PERIOD  &kp N1    &kp N2  &kp N3    &kp N4    &kp N5        &kp N6      &kp N7    &kp N8         &kp N9    &kp N0     &kp MINUS
&kp TILDE   &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT     &kp CARET   &kp AMPS  &kp ASTERISK   &kp LPAR  &kp RPAR   &kp UNDERSCORE
&kp GRAVE   &trans    &trans  &trans    &trans    &L_Bracket    &R_Bracket  &trans    &kp BACKSLASH  &kp PIPE  &kp EQUAL  &kp PLUS
                              &trans    &trans    &trans        &trans      &trans    &trans
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
&kp ESCAPE     &trans  &kp LC(LEFT_ARROW)  &kp UP_ARROW    &kp LC(RIGHT)  &kp HOME              &msc SCRL_UP    &kp LC(LEFT)    &kp UP_ARROW  &kp LC(RIGHT)  &trans  &trans
&kp LS(LG(S))  &trans  &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT      &kp LA(LEFT_ARROW)    &kp LA(RIGHT)   &kp LEFT_ARROW  &kp DOWN      &kp RIGHT      &trans  &trans
&trans         &trans  &trans              &kp PG_DN       &kp PG_UP      &kp END               &msc SCRL_DOWN  &trans          &trans        &trans         &trans  &trans
                                           &trans          &trans         &trans                &trans          &trans          &trans
            >;
        };

        extended_layer {
            label = "EXT";
            bindings = <
&trans    &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6                &kp F7                &kp F8  &kp F9  &kp F10  &kp F12
&kp K_PP  &kp K_PREV    &kp K_NEXT    &kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP    &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans  &trans  &trans   &trans
&trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans                &trans                &trans  &trans  &trans   &trans
                                      &trans        &trans        &trans          &trans                &trans                &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Activate_EXT {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
